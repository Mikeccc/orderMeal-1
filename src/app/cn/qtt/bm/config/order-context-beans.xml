<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
       ">

	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:deploy.properties</value>
			</list>
		</property>
	</bean>

  	<bean id="writeDataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="alias" value="writeDataSource"/>
		<property name="driver" value="${write.connection.driver_class}" />
		<property name="driverUrl" value="${write.connection.url}" />
		<property name="user" value="${write.connection.username}" />
		<property name="password" value="${write.connection.password}" />
		<!-- 测试的SQL执行语句 -->
		<property name="houseKeepingTestSql" value="SELECT 1"/>
		
		<property name="maximumConnectionCount" value="${write.proxool.maximum.connection.count}"/>
		 <!-- 最少保持的空闲连接数 （默认5个） -->
		<property name="minimumConnectionCount" value="${write.proxool.minimum.connection.count}" />
		<property name="statistics" value="${write.proxool.statistics}" />
		<property name="simultaneousBuildThrottle" value="${write.proxool.simultaneous.build.throttle}"/>
	</bean>
    
    <bean id="readDataSource1" class="org.logicalcobwebs.proxool.ProxoolDataSource">
        <property name="alias" value="readDataSource"/>
        <property name="driver" value="${read.connection.driver_class}" />
        <property name="driverUrl" value="${read.connection.url}" />
        <property name="user" value="${read.connection.username}" />
        <property name="password" value="${read.connection.password}" />
        <property name="houseKeepingTestSql" value="SELECT 1"/>
        <property name="maximumConnectionCount" value="${read.proxool.maximum.connection.count}"/>
        <property name="minimumConnectionCount" value="${read.proxool.minimum.connection.count}" />
        <property name="statistics" value="${read.proxool.statistics}" />
        <property name="simultaneousBuildThrottle" value="${read.proxool.simultaneous.build.throttle}"/>
    </bean>
    
    
    
    <bean id="readWriteDataSource" class="app.cn.qtt.bm.common.datasource.ReadWriteDataSource">
        <property name="writeDataSource" ref="writeDataSource"/>
        <property name="readDataSourceMap">
           <map>
              <entry key="readDataSource1" value-ref="readDataSource1"/>
              <entry key="readDataSource2" value-ref="readDataSource1"/>
              <entry key="readDataSource3" value-ref="readDataSource1"/>
              <entry key="readDataSource4" value-ref="readDataSource1"/>
           </map>
        </property>
    </bean>

    <bean id="readWriteDataSourceTransactionProcessor" class="app.cn.qtt.bm.common.datasource.ReadWriteDataSourceProcessor">
       <property name="forceChoiceReadWhenWrite" value="false"/>
    </bean>
    
    <!-- 日志 -->
    <bean id="logAdvice" class="app.cn.qtt.bm.common.advice.LogAdvice"></bean>
        
    <aop:config expose-proxy="true">
        <!-- 只对业务逻辑层实施事务 -->
        <aop:pointcut id="txPointcut" expression="execution(* app.cn.qtt.bm.*.services..*Mgr*.*(..)))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
        
        <aop:advisor advice-ref="logAdvice" pointcut-ref="txPointcut"></aop:advisor>
        
        <!-- 通过AOP切面实现读/写库选择 -->
        <aop:aspect order="-2147483648" ref="readWriteDataSourceTransactionProcessor">
           <aop:around pointcut-ref="txPointcut" method="determineReadOrWriteDB"/>
        </aop:aspect>
    </aop:config>
    
    
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="readWriteDataSource"/>
    </bean>
    
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="save*" rollback-for="app.cn.qtt.bm.common.exception.CMRollBackException" no-rollback-for="app.cn.qtt.bm.common.exception.CMException" propagation="REQUIRED" />
            <tx:method name="add*" rollback-for="app.cn.qtt.bm.common.exception.CMRollBackException" no-rollback-for="app.cn.qtt.bm.common.exception.CMException" propagation="REQUIRED" />
            <tx:method name="create*" rollback-for="app.cn.qtt.bm.common.exception.CMRollBackException" no-rollback-for="app.cn.qtt.bm.common.exception.CMException" propagation="REQUIRED" />
            <tx:method name="insert*" rollback-for="app.cn.qtt.bm.common.exception.CMRollBackException" no-rollback-for="app.cn.qtt.bm.common.exception.CMException" propagation="REQUIRED" />
            <tx:method name="update*" rollback-for="app.cn.qtt.bm.common.exception.CMRollBackException" no-rollback-for="app.cn.qtt.bm.common.exception.CMException" propagation="REQUIRED" />
            <tx:method name="merge*" rollback-for="app.cn.qtt.bm.common.exception.CMRollBackException" no-rollback-for="app.cn.qtt.bm.common.exception.CMException" propagation="REQUIRED" />
            <tx:method name="del*" rollback-for="app.cn.qtt.bm.common.exception.CMRollBackException" no-rollback-for="app.cn.qtt.bm.common.exception.CMException" propagation="REQUIRED" />
            <tx:method name="remove*" rollback-for="app.cn.qtt.bm.common.exception.CMRollBackException" no-rollback-for="app.cn.qtt.bm.common.exception.CMException" propagation="REQUIRED" />
            
            <tx:method name="put*" read-only="true"/>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="use*" read-only="true"/>
            <tx:method name="get*" read-only="true" />
            <tx:method name="count*" read-only="true" />
            <tx:method name="find*" read-only="true" />
            <tx:method name="list*" read-only="true" />
            
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    
    
    <!-- SqlMap setup for iBATIS Database Layer -->
	<bean id="sqlMapClient"  class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocations">
			<list>
				 <value>classpath:app/cn/qtt/bm/config/SqlMapConfig.xml</value>
			</list>
		</property>
		<property name="dataSource" ref="readWriteDataSource"/>
	</bean>
	
    
    
</beans>