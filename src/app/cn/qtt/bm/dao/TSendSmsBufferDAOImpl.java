package app.cn.qtt.bm.dao;

import java.sql.SQLException;
import java.util.List;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import app.cn.qtt.bm.model.TSendSmsBuffer;
import app.cn.qtt.bm.model.TSendSmsBufferExample;

import com.ibatis.sqlmap.client.SqlMapClient;

public class TSendSmsBufferDAOImpl extends SqlMapClientDaoSupport implements TSendSmsBufferDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_send_sms_buffer
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public TSendSmsBufferDAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_send_sms_buffer
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public void insert(TSendSmsBuffer record) {
        getSqlMapClientTemplate().insert("t_send_sms_buffer.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_send_sms_buffer
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public int updateByPrimaryKey(TSendSmsBuffer record) {
        int rows = getSqlMapClientTemplate().update("t_send_sms_buffer.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_send_sms_buffer
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public int updateByPrimaryKeySelective(TSendSmsBuffer record) {
        int rows = getSqlMapClientTemplate().update("t_send_sms_buffer.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_send_sms_buffer
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public List selectByExample(TSendSmsBufferExample example) {
        List list = getSqlMapClientTemplate().queryForList("t_send_sms_buffer.abatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_send_sms_buffer
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public TSendSmsBuffer selectByPrimaryKey(Long bufferId) {
        TSendSmsBuffer key = new TSendSmsBuffer();
        key.setBufferId(bufferId);
        TSendSmsBuffer record = (TSendSmsBuffer) getSqlMapClientTemplate().queryForObject("t_send_sms_buffer.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_send_sms_buffer
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public int deleteByExample(TSendSmsBufferExample example) {
        int rows = getSqlMapClientTemplate().delete("t_send_sms_buffer.abatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_send_sms_buffer
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public int deleteByPrimaryKey(Long bufferId) {
        TSendSmsBuffer key = new TSendSmsBuffer();
        key.setBufferId(bufferId);
        int rows = getSqlMapClientTemplate().delete("t_send_sms_buffer.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_send_sms_buffer
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public int countByExample(TSendSmsBufferExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("t_send_sms_buffer.abatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_send_sms_buffer
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public int updateByExampleSelective(TSendSmsBuffer record, TSendSmsBufferExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("t_send_sms_buffer.abatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_send_sms_buffer
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public int updateByExample(TSendSmsBuffer record, TSendSmsBufferExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("t_send_sms_buffer.abatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table t_send_sms_buffer
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    private static class UpdateByExampleParms extends TSendSmsBufferExample {
        private Object record;

        public UpdateByExampleParms(Object record, TSendSmsBufferExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
    
    @Override
	public void batchInsert(List<TSendSmsBuffer> list) throws SQLException {		
		SqlMapClient sqlMapClient = getSqlMapClientTemplate().getSqlMapClient();
		sqlMapClient.startBatch();
		for(TSendSmsBuffer sendSmsBuffer:list){
			getSqlMapClientTemplate().insert("t_send_sms_buffer.abatorgenerated_insert", sendSmsBuffer);
		}
		sqlMapClient.executeBatch();
	}
}