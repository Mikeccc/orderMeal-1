package app.cn.qtt.bm.dao;

import app.cn.qtt.bm.model.MyOrder;
import app.cn.qtt.bm.model.OrderOperateBean;
import app.cn.qtt.bm.model.ShopOrderdailyStatistics;
import app.cn.qtt.bm.model.TOrderInfo;
import app.cn.qtt.bm.model.TOrderInfoExample;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class TOrderInfoDAOImpl extends SqlMapClientDaoSupport implements TOrderInfoDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_order_info
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public TOrderInfoDAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_order_info
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public void insert(TOrderInfo record) {
        getSqlMapClientTemplate().insert("t_order_info.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_order_info
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public int updateByPrimaryKey(TOrderInfo record) {
        int rows = getSqlMapClientTemplate().update("t_order_info.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_order_info
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public int updateByPrimaryKeySelective(TOrderInfo record) {
        int rows = getSqlMapClientTemplate().update("t_order_info.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_order_info
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public List selectByExample(TOrderInfoExample example) {
        List list = getSqlMapClientTemplate().queryForList("t_order_info.abatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_order_info
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public TOrderInfo selectByPrimaryKey(Integer orderId) {
        TOrderInfo key = new TOrderInfo();
        key.setOrderId(orderId);
        TOrderInfo record = (TOrderInfo) getSqlMapClientTemplate().queryForObject("t_order_info.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_order_info
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public int deleteByExample(TOrderInfoExample example) {
        int rows = getSqlMapClientTemplate().delete("t_order_info.abatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_order_info
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public int deleteByPrimaryKey(Integer orderId) {
        TOrderInfo key = new TOrderInfo();
        key.setOrderId(orderId);
        int rows = getSqlMapClientTemplate().delete("t_order_info.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_order_info
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public int countByExample(TOrderInfoExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("t_order_info.abatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_order_info
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public int updateByExampleSelective(TOrderInfo record, TOrderInfoExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("t_order_info.abatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_order_info
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public int updateByExample(TOrderInfo record, TOrderInfoExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("t_order_info.abatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table t_order_info
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    private static class UpdateByExampleParms extends TOrderInfoExample {
        private Object record;

        public UpdateByExampleParms(Object record, TOrderInfoExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }

	@Override
	public List selectShopOrderDailyStatistics(
			ShopOrderdailyStatistics shopOrderdailyStatistics) {
		 return getSqlMapClientTemplate().queryForList("shop_order_daily_statistics.selectDailyStatistics", shopOrderdailyStatistics);
	}

	@Override
	public List selectMyOrderInfo(MyOrder myOrder) {
		return getSqlMapClientTemplate().queryForList("my_order.selectMyOrderInfo", myOrder);
	}
	
	@Override
	public List selectMyOrderInfo2(MyOrder myOrder) {
		return getSqlMapClientTemplate().queryForList("my_order.selectMyOrderInfo2", myOrder);
	}

	@Override
	public List selectMyOrderInfo3(MyOrder myOrder) {
		return getSqlMapClientTemplate().queryForList("my_order.selectMyOrderInfo3", myOrder);
	}

	@Override
	public List<OrderOperateBean> selectOrderOperateDetail(Map<String,Object> params) {
		List<OrderOperateBean> list=
		 getSqlMapClientTemplate().queryForList("t_order_info.selectOrderOperateDetail", params);
		return list;
	}
	
	@Override
	public List selectMyOrderByUserCodeAndTime(MyOrder myOrder) {
		Map<String,Object> params=new HashMap<String,Object>();
		params.put("myOrder", myOrder);
		return getSqlMapClientTemplate().queryForList("my_order.selectMyOrderInfoByCodeAndTime", params);
				
	}

	@Override
	public List<OrderOperateBean> selectInvalidUserOrderOperateDetail(Map<String, Object> params) {
		List<OrderOperateBean> list=
				 getSqlMapClientTemplate().queryForList("t_order_info.selectInvalideUserOrderOperateDetail", params);
				return list;
	}
}