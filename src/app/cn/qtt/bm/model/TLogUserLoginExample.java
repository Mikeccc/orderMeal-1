package app.cn.qtt.bm.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TLogUserLoginExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table t_log_user_login
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table t_log_user_login
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    protected List oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_log_user_login
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public TLogUserLoginExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_log_user_login
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    protected TLogUserLoginExample(TLogUserLoginExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_log_user_login
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_log_user_login
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_log_user_login
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_log_user_login
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_log_user_login
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_log_user_login
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table t_log_user_login
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table t_log_user_login
     *
     * @abatorgenerated Sat Jun 08 15:02:10 CST 2013
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andLogUserLoginIdIsNull() {
            addCriterion("log_user_login_id is null");
            return this;
        }

        public Criteria andLogUserLoginIdIsNotNull() {
            addCriterion("log_user_login_id is not null");
            return this;
        }

        public Criteria andLogUserLoginIdEqualTo(Integer value) {
            addCriterion("log_user_login_id =", value, "logUserLoginId");
            return this;
        }

        public Criteria andLogUserLoginIdNotEqualTo(Integer value) {
            addCriterion("log_user_login_id <>", value, "logUserLoginId");
            return this;
        }

        public Criteria andLogUserLoginIdGreaterThan(Integer value) {
            addCriterion("log_user_login_id >", value, "logUserLoginId");
            return this;
        }

        public Criteria andLogUserLoginIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("log_user_login_id >=", value, "logUserLoginId");
            return this;
        }

        public Criteria andLogUserLoginIdLessThan(Integer value) {
            addCriterion("log_user_login_id <", value, "logUserLoginId");
            return this;
        }

        public Criteria andLogUserLoginIdLessThanOrEqualTo(Integer value) {
            addCriterion("log_user_login_id <=", value, "logUserLoginId");
            return this;
        }

        public Criteria andLogUserLoginIdIn(List values) {
            addCriterion("log_user_login_id in", values, "logUserLoginId");
            return this;
        }

        public Criteria andLogUserLoginIdNotIn(List values) {
            addCriterion("log_user_login_id not in", values, "logUserLoginId");
            return this;
        }

        public Criteria andLogUserLoginIdBetween(Integer value1, Integer value2) {
            addCriterion("log_user_login_id between", value1, value2, "logUserLoginId");
            return this;
        }

        public Criteria andLogUserLoginIdNotBetween(Integer value1, Integer value2) {
            addCriterion("log_user_login_id not between", value1, value2, "logUserLoginId");
            return this;
        }

        public Criteria andUserCodeIsNull() {
            addCriterion("user_code is null");
            return this;
        }

        public Criteria andUserCodeIsNotNull() {
            addCriterion("user_code is not null");
            return this;
        }

        public Criteria andUserCodeEqualTo(String value) {
            addCriterion("user_code =", value, "userCode");
            return this;
        }

        public Criteria andUserCodeNotEqualTo(String value) {
            addCriterion("user_code <>", value, "userCode");
            return this;
        }

        public Criteria andUserCodeGreaterThan(String value) {
            addCriterion("user_code >", value, "userCode");
            return this;
        }

        public Criteria andUserCodeGreaterThanOrEqualTo(String value) {
            addCriterion("user_code >=", value, "userCode");
            return this;
        }

        public Criteria andUserCodeLessThan(String value) {
            addCriterion("user_code <", value, "userCode");
            return this;
        }

        public Criteria andUserCodeLessThanOrEqualTo(String value) {
            addCriterion("user_code <=", value, "userCode");
            return this;
        }

        public Criteria andUserCodeLike(String value) {
            addCriterion("user_code like", value, "userCode");
            return this;
        }

        public Criteria andUserCodeNotLike(String value) {
            addCriterion("user_code not like", value, "userCode");
            return this;
        }

        public Criteria andUserCodeIn(List values) {
            addCriterion("user_code in", values, "userCode");
            return this;
        }

        public Criteria andUserCodeNotIn(List values) {
            addCriterion("user_code not in", values, "userCode");
            return this;
        }

        public Criteria andUserCodeBetween(String value1, String value2) {
            addCriterion("user_code between", value1, value2, "userCode");
            return this;
        }

        public Criteria andUserCodeNotBetween(String value1, String value2) {
            addCriterion("user_code not between", value1, value2, "userCode");
            return this;
        }

        public Criteria andUserLoginIpIsNull() {
            addCriterion("user_login_ip is null");
            return this;
        }

        public Criteria andUserLoginIpIsNotNull() {
            addCriterion("user_login_ip is not null");
            return this;
        }

        public Criteria andUserLoginIpEqualTo(String value) {
            addCriterion("user_login_ip =", value, "userLoginIp");
            return this;
        }

        public Criteria andUserLoginIpNotEqualTo(String value) {
            addCriterion("user_login_ip <>", value, "userLoginIp");
            return this;
        }

        public Criteria andUserLoginIpGreaterThan(String value) {
            addCriterion("user_login_ip >", value, "userLoginIp");
            return this;
        }

        public Criteria andUserLoginIpGreaterThanOrEqualTo(String value) {
            addCriterion("user_login_ip >=", value, "userLoginIp");
            return this;
        }

        public Criteria andUserLoginIpLessThan(String value) {
            addCriterion("user_login_ip <", value, "userLoginIp");
            return this;
        }

        public Criteria andUserLoginIpLessThanOrEqualTo(String value) {
            addCriterion("user_login_ip <=", value, "userLoginIp");
            return this;
        }

        public Criteria andUserLoginIpLike(String value) {
            addCriterion("user_login_ip like", value, "userLoginIp");
            return this;
        }

        public Criteria andUserLoginIpNotLike(String value) {
            addCriterion("user_login_ip not like", value, "userLoginIp");
            return this;
        }

        public Criteria andUserLoginIpIn(List values) {
            addCriterion("user_login_ip in", values, "userLoginIp");
            return this;
        }

        public Criteria andUserLoginIpNotIn(List values) {
            addCriterion("user_login_ip not in", values, "userLoginIp");
            return this;
        }

        public Criteria andUserLoginIpBetween(String value1, String value2) {
            addCriterion("user_login_ip between", value1, value2, "userLoginIp");
            return this;
        }

        public Criteria andUserLoginIpNotBetween(String value1, String value2) {
            addCriterion("user_login_ip not between", value1, value2, "userLoginIp");
            return this;
        }

        public Criteria andUserLoginTimeIsNull() {
            addCriterion("user_login_time is null");
            return this;
        }

        public Criteria andUserLoginTimeIsNotNull() {
            addCriterion("user_login_time is not null");
            return this;
        }

        public Criteria andUserLoginTimeEqualTo(Date value) {
            addCriterion("user_login_time =", value, "userLoginTime");
            return this;
        }

        public Criteria andUserLoginTimeNotEqualTo(Date value) {
            addCriterion("user_login_time <>", value, "userLoginTime");
            return this;
        }

        public Criteria andUserLoginTimeGreaterThan(Date value) {
            addCriterion("user_login_time >", value, "userLoginTime");
            return this;
        }

        public Criteria andUserLoginTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("user_login_time >=", value, "userLoginTime");
            return this;
        }

        public Criteria andUserLoginTimeLessThan(Date value) {
            addCriterion("user_login_time <", value, "userLoginTime");
            return this;
        }

        public Criteria andUserLoginTimeLessThanOrEqualTo(Date value) {
            addCriterion("user_login_time <=", value, "userLoginTime");
            return this;
        }

        public Criteria andUserLoginTimeIn(List values) {
            addCriterion("user_login_time in", values, "userLoginTime");
            return this;
        }

        public Criteria andUserLoginTimeNotIn(List values) {
            addCriterion("user_login_time not in", values, "userLoginTime");
            return this;
        }

        public Criteria andUserLoginTimeBetween(Date value1, Date value2) {
            addCriterion("user_login_time between", value1, value2, "userLoginTime");
            return this;
        }

        public Criteria andUserLoginTimeNotBetween(Date value1, Date value2) {
            addCriterion("user_login_time not between", value1, value2, "userLoginTime");
            return this;
        }

        public Criteria andUserUnloginTimeIsNull() {
            addCriterion("user_unlogin_time is null");
            return this;
        }

        public Criteria andUserUnloginTimeIsNotNull() {
            addCriterion("user_unlogin_time is not null");
            return this;
        }

        public Criteria andUserUnloginTimeEqualTo(Date value) {
            addCriterion("user_unlogin_time =", value, "userUnloginTime");
            return this;
        }

        public Criteria andUserUnloginTimeNotEqualTo(Date value) {
            addCriterion("user_unlogin_time <>", value, "userUnloginTime");
            return this;
        }

        public Criteria andUserUnloginTimeGreaterThan(Date value) {
            addCriterion("user_unlogin_time >", value, "userUnloginTime");
            return this;
        }

        public Criteria andUserUnloginTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("user_unlogin_time >=", value, "userUnloginTime");
            return this;
        }

        public Criteria andUserUnloginTimeLessThan(Date value) {
            addCriterion("user_unlogin_time <", value, "userUnloginTime");
            return this;
        }

        public Criteria andUserUnloginTimeLessThanOrEqualTo(Date value) {
            addCriterion("user_unlogin_time <=", value, "userUnloginTime");
            return this;
        }

        public Criteria andUserUnloginTimeIn(List values) {
            addCriterion("user_unlogin_time in", values, "userUnloginTime");
            return this;
        }

        public Criteria andUserUnloginTimeNotIn(List values) {
            addCriterion("user_unlogin_time not in", values, "userUnloginTime");
            return this;
        }

        public Criteria andUserUnloginTimeBetween(Date value1, Date value2) {
            addCriterion("user_unlogin_time between", value1, value2, "userUnloginTime");
            return this;
        }

        public Criteria andUserUnloginTimeNotBetween(Date value1, Date value2) {
            addCriterion("user_unlogin_time not between", value1, value2, "userUnloginTime");
            return this;
        }

        public Criteria andUserSessionIdIsNull() {
            addCriterion("user_session_id is null");
            return this;
        }

        public Criteria andUserSessionIdIsNotNull() {
            addCriterion("user_session_id is not null");
            return this;
        }

        public Criteria andUserSessionIdEqualTo(String value) {
            addCriterion("user_session_id =", value, "userSessionId");
            return this;
        }

        public Criteria andUserSessionIdNotEqualTo(String value) {
            addCriterion("user_session_id <>", value, "userSessionId");
            return this;
        }

        public Criteria andUserSessionIdGreaterThan(String value) {
            addCriterion("user_session_id >", value, "userSessionId");
            return this;
        }

        public Criteria andUserSessionIdGreaterThanOrEqualTo(String value) {
            addCriterion("user_session_id >=", value, "userSessionId");
            return this;
        }

        public Criteria andUserSessionIdLessThan(String value) {
            addCriterion("user_session_id <", value, "userSessionId");
            return this;
        }

        public Criteria andUserSessionIdLessThanOrEqualTo(String value) {
            addCriterion("user_session_id <=", value, "userSessionId");
            return this;
        }

        public Criteria andUserSessionIdLike(String value) {
            addCriterion("user_session_id like", value, "userSessionId");
            return this;
        }

        public Criteria andUserSessionIdNotLike(String value) {
            addCriterion("user_session_id not like", value, "userSessionId");
            return this;
        }

        public Criteria andUserSessionIdIn(List values) {
            addCriterion("user_session_id in", values, "userSessionId");
            return this;
        }

        public Criteria andUserSessionIdNotIn(List values) {
            addCriterion("user_session_id not in", values, "userSessionId");
            return this;
        }

        public Criteria andUserSessionIdBetween(String value1, String value2) {
            addCriterion("user_session_id between", value1, value2, "userSessionId");
            return this;
        }

        public Criteria andUserSessionIdNotBetween(String value1, String value2) {
            addCriterion("user_session_id not between", value1, value2, "userSessionId");
            return this;
        }
    }
}